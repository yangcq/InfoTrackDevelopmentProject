// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebScrape.Data;

#nullable disable

namespace WebScrapeDBContext.Migrations
{
    [DbContext(typeof(WebScrapeDB))]
    [Migration("20240718113505_v3")]
    partial class v3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebScrape.Data.Model.Ranking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<int>("SearchId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SearchId");

                    b.ToTable("Rankings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 7, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Rank = 42,
                            SearchId = 1
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2024, 7, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Rank = 33,
                            SearchId = 1
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2024, 7, 3, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Rank = 56,
                            SearchId = 1
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2024, 7, 4, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Rank = 12,
                            SearchId = 1
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(2024, 7, 5, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Rank = 56,
                            SearchId = 1
                        },
                        new
                        {
                            Id = 6,
                            Created = new DateTime(2024, 7, 6, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Rank = 45,
                            SearchId = 1
                        },
                        new
                        {
                            Id = 7,
                            Created = new DateTime(2024, 7, 7, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Rank = 33,
                            SearchId = 1
                        },
                        new
                        {
                            Id = 8,
                            Created = new DateTime(2024, 7, 8, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Rank = 45,
                            SearchId = 1
                        },
                        new
                        {
                            Id = 9,
                            Created = new DateTime(2024, 7, 9, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Rank = 34,
                            SearchId = 1
                        },
                        new
                        {
                            Id = 10,
                            Created = new DateTime(2024, 7, 10, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Rank = 67,
                            SearchId = 1
                        });
                });

            modelBuilder.Entity("WebScrape.Data.Model.Search", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HashValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KeyWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SearchCount")
                        .HasColumnType("int");

                    b.Property<int>("SearchEngine")
                        .HasColumnType("int");

                    b.Property<string>("TargetURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HashValue");

                    b.ToTable("Searches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HashValue = "Gy5UjIUl1iE4N2YN/26EkLQ9mj55bSVB7Z/kGLvRXkU=",
                            KeyWord = "land registry searches",
                            SearchCount = 10,
                            SearchEngine = 0,
                            TargetURL = "www.infotrack.co.uk"
                        });
                });

            modelBuilder.Entity("WebScrape.Data.Model.Ranking", b =>
                {
                    b.HasOne("WebScrape.Data.Model.Search", "Search")
                        .WithMany("Rankings")
                        .HasForeignKey("SearchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Search");
                });

            modelBuilder.Entity("WebScrape.Data.Model.Search", b =>
                {
                    b.Navigation("Rankings");
                });
#pragma warning restore 612, 618
        }
    }
}
